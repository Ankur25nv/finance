#Implementation of Black scholes using Python
import numpy as np
from scipy.stats import norm

#define variables
Rate = float(input('Rate : '))
Price = float(input('Price : '))
Strike = float(input('Strike Price : '))
Time = int(input('Time to expiry in days : '))
Volatility = float(input('\nVolatility(Sigma) : '))
OptionType = input('Option type, either c for Call or p for Put : ')
#Default inputs for which expected output is 0.51
#r= 0.01
#S = 30
#K = 40
#T = 240/365
#sigma = 0.3

#function for BSM with type representing Call or Put Option

def blackScholes(r, S, K, T, sigma, type):
    "Calculate BS option price of call/put"
    d1 = (np.log(S/K) + (r + sigma**2/2)*T)/(sigma*np.sqrt(T))
    d2 = d1 - sigma*np.sqrt(T)
    try:
        if type == "c":
            price = S*norm.cdf(d1, 0, 1) - K*np.exp(-r*T)*norm.cdf(d2, 0, 1)
        elif type == "p":
            price = K*np.exp(-r*T)*norm.cdf(-d2, 0, 1) - S*norm.cdf(-d1, 0, 1)
        return price
    except:
        print("Please confirm option type, either 'c' for Call or 'p' for Put!")
print("Option Price is ", round(blackScholes(Rate, Price , Strike, (Time/365), Volatility, OptionType),2))
